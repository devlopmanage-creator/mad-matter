---
// Full Gallery Component for the /gallery page

// Import all images from the radaway folder using Astro's glob import
const imageModules = import.meta.glob('../assets/radaway/*.jpg', { eager: true });

// Convert to array and sort numerically
const imageImports = Object.entries(imageModules)
  .map(([path, module]) => {
    const filename = path.split('/').pop()?.replace('.jpg', '') || '';
    const imageModule = module as { default: { src: string } };
    return {
      src: imageModule.default.src,
      alt: `Radaway Collection ${filename}`,
      filename: `${filename}.jpg`,
      index: parseInt(filename) || 0
    };
  })
  .sort((a, b) => a.index - b.index);
---

<div class="full-gallery-page">
  <section class="gallery-hero">
    <div class="gallery-hero-content">
      <h1 class="gallery-title">RADAWAY</h1>
      <div class="gallery-subtitle">INDOOR &mdash; OUTDOOR</div>
      <p class="gallery-description">Explore the complete RADAWAY collection of modern design solutions</p>
    </div>
  </section>
  
  <section class="gallery-grid-section">
    <div class="gallery-grid">
      {imageImports.map((image, index) => (
        <div class="gallery-item" data-slide={index + 1}>
          <img src={image.src} alt={image.alt} class="gallery-img" />
        </div>
      ))}
    </div>
  </section>
</div>

<script is:inline>
  // Gallery modal functionality
  function initGalleryModal() {
    const galleryItems = document.querySelectorAll('.gallery-item');
    
    galleryItems.forEach((item, index) => {
      item.addEventListener('click', function(e) {
        e.preventDefault();
        
        const img = this.querySelector('.gallery-img');
        if (!img) return;
        
        const imgSrc = img.src;
        const imgAlt = img.alt;
        
        openImageModal(imgSrc, imgAlt, index + 1);
      });
    });
  }
  
  function openImageModal(imgSrc, imgAlt, slideNumber) {
    // Remove any existing modal first
    const existingModal = document.querySelector('.image-modal');
    if (existingModal) {
      existingModal.remove();
    }
    
    // Get all gallery images for navigation
    const allImages = Array.from(document.querySelectorAll('.gallery-img'));
    const currentIndex = slideNumber - 1;
    
    // Create modal overlay
    const modal = document.createElement('div');
    modal.className = 'image-modal';
    modal.style.cssText = `
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: rgba(0, 0, 0, 0.95);
      display: flex;
      align-items: center;
      justify-content: center;
      z-index: 10000;
      cursor: pointer;
      backdrop-filter: blur(8px);
    `;
    
    modal.innerHTML = `
      <div class="modal-content" style="
        background: transparent;
        border: 2px solid rgba(255, 255, 255, 0.2);
        border-radius: 16px;
        max-width: 95vw;
        max-height: 95vh;
        display: flex;
        flex-direction: column;
        box-shadow: 0 25px 80px rgba(0, 0, 0, 0.5);
        overflow: hidden;
        cursor: default;
        position: relative;
      ">
        <div class="modal-header" style="
          display: flex;
          justify-content: space-between;
          align-items: center;
          padding: 1rem 1.5rem;
          background: rgba(0, 0, 0, 0.05);
          backdrop-filter: blur(20px);
          border-bottom: 1px solid rgba(255, 255, 255, 0.02);
        ">
          <h3 style="margin: 0; font-family: 'Playfair Display', serif; font-size: 1.2rem; color: white;">${imgAlt}</h3>
          <button class="close-btn" style="
            background: rgba(255, 255, 255, 0.1);
            border: 1px solid rgba(255, 255, 255, 0.2);
            font-size: 1.2rem;
            cursor: pointer;
            color: white;
            padding: 0;
            width: 35px;
            height: 35px;
            display: flex;
            align-items: center;
            justify-content: center;
            border-radius: 8px;
            transition: all 0.3s ease;
            font-weight: bold;
            backdrop-filter: blur(10px);
          ">&times;</button>
        </div>
        <div class="modal-body" style="
          flex: 1;
          display: flex;
          align-items: center;
          justify-content: center;
          padding: 1rem;
          background: transparent;
          position: relative;
        ">
          <img src="${imgSrc}" alt="${imgAlt}" class="modal-image" style="
            max-width: 100%;
            max-height: 75vh;
            object-fit: contain;
            border-radius: 12px;
            box-shadow: 0 15px 40px rgba(0, 0, 0, 0.4);
            transition: all 0.3s cubic-bezier(0.25, 0.46, 0.45, 0.94);
            opacity: 1;
            transform: scale(1);
          " />
          
          <!-- Navigation arrows with glassmorphism square style -->
          ${currentIndex > 0 ? `
            <button class="nav-arrow nav-prev" style="
              position: absolute;
              left: 1.5rem;
              top: 50%;
              transform: translateY(-50%);
              background: rgba(0, 0, 0, 0.4);
              border: none;
              color: white;
              width: 48px;
              height: 48px;
              border-radius: 12px;
              display: flex;
              align-items: center;
              justify-content: center;
              font-size: 1.2rem;
              font-weight: 300;
              cursor: pointer;
              transition: all 0.3s ease;
              backdrop-filter: blur(10px);
              box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
              z-index: 10;
            ">&#10094;</button>
          ` : ''}
          
          ${currentIndex < allImages.length - 1 ? `
            <button class="nav-arrow nav-next" style="
              position: absolute;
              right: 1.5rem;
              top: 50%;
              transform: translateY(-50%);
              background: rgba(0, 0, 0, 0.4);
              border: none;
              color: white;
              width: 48px;
              height: 48px;
              border-radius: 12px;
              display: flex;
              align-items: center;
              justify-content: center;
              font-size: 1.2rem;
              font-weight: 300;
              cursor: pointer;
              transition: all 0.3s ease;
              backdrop-filter: blur(10px);
              box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
              z-index: 10;
            ">&#10095;</button>
          ` : ''}
        </div>
        
        <!-- Image counter with Minotti style -->
        <div class="image-counter" style="
          position: absolute;
          bottom: 2rem;
          right: 2rem;
          background: rgba(255, 255, 255, 0.9);
          color: #333;
          padding: 0.8rem 1.2rem;
          border-radius: 25px;
          font-size: 0.9rem;
          font-weight: 500;
          backdrop-filter: blur(10px);
          border: 1px solid rgba(0, 0, 0, 0.1);
          box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
          transition: all 0.3s ease;
        ">
          ${currentIndex + 1} / ${allImages.length}
        </div>
      </div>
    `;
    
    document.body.appendChild(modal);
    document.body.style.overflow = 'hidden';
    
    // Add event listeners
    const closeBtn = modal.querySelector('.close-btn');
    const prevBtn = modal.querySelector('.nav-prev');
    const nextBtn = modal.querySelector('.nav-next');
    const modalImage = modal.querySelector('.modal-image');
    
    // Store current index in modal for easy access
    modal.currentIndex = currentIndex;
    
    // Close button events
    closeBtn.addEventListener('click', function(e) {
      e.stopPropagation();
      closeImageModal();
    });
    
    closeBtn.addEventListener('mouseenter', function() {
      this.style.background = 'rgba(255, 255, 255, 0.2)';
      this.style.borderColor = 'rgba(255, 255, 255, 0.4)';
    });
    
    closeBtn.addEventListener('mouseleave', function() {
      this.style.background = 'rgba(255, 255, 255, 0.1)';
      this.style.borderColor = 'rgba(255, 255, 255, 0.2)';
    });
    
    // Navigation events with Minotti-style effects
    if (prevBtn) {
      prevBtn.addEventListener('click', function(e) {
        e.stopPropagation();
        navigateToImage(modal.currentIndex - 1);
      });
      
      prevBtn.addEventListener('mouseenter', function() {
        this.style.transform = 'translateY(-50%) scale(1.05)';
        this.style.background = 'rgba(0, 0, 0, 0.6)';
        this.style.boxShadow = '0 6px 20px rgba(0, 0, 0, 0.3)';
      });
      
      prevBtn.addEventListener('mouseleave', function() {
        this.style.transform = 'translateY(-50%) scale(1)';
        this.style.background = 'rgba(0, 0, 0, 0.4)';
        this.style.boxShadow = '0 4px 15px rgba(0, 0, 0, 0.2)';
      });
    }
    
    if (nextBtn) {
      nextBtn.addEventListener('click', function(e) {
        e.stopPropagation();
        navigateToImage(modal.currentIndex + 1);
      });
      
      nextBtn.addEventListener('mouseenter', function() {
        this.style.transform = 'translateY(-50%) scale(1.05)';
        this.style.background = 'rgba(0, 0, 0, 0.6)';
        this.style.boxShadow = '0 6px 20px rgba(0, 0, 0, 0.3)';
      });
      
      nextBtn.addEventListener('mouseleave', function() {
        this.style.transform = 'translateY(-50%) scale(1)';
        this.style.background = 'rgba(0, 0, 0, 0.4)';
        this.style.boxShadow = '0 4px 15px rgba(0, 0, 0, 0.2)';
      });
    }
    
    // Close when clicking outside
    modal.addEventListener('click', function(e) {
      if (e.target === modal) {
        closeImageModal();
      }
    });
    
    // Keyboard navigation
    document.addEventListener('keydown', function(e) {
      if (e.key === 'Escape') {
        closeImageModal();
      } else if (e.key === 'ArrowLeft' && prevBtn) {
        navigateToImage(modal.currentIndex - 1);
      } else if (e.key === 'ArrowRight' && nextBtn) {
        navigateToImage(modal.currentIndex + 1);
      }
    });
  }
  
  // Function to navigate to specific image with smooth transition
  function navigateToImage(newIndex) {
    const modal = document.querySelector('.image-modal');
    if (!modal) return;
    
    const allImages = Array.from(document.querySelectorAll('.gallery-img'));
    if (newIndex >= 0 && newIndex < allImages.length) {
      const newImg = allImages[newIndex];
      const newImgSrc = newImg.src;
      const newImgAlt = newImg.alt;
      const modalImage = modal.querySelector('.modal-image');
      
      // Update current index
      modal.currentIndex = newIndex;
      
      // Smooth fade transition without closing modal
      modalImage.style.opacity = '0';
      modalImage.style.transform = 'scale(0.95)';
      
      setTimeout(() => {
        // Change image source
        modalImage.src = newImgSrc;
        modalImage.alt = newImgAlt;
        
        // Update title
        const titleElement = modal.querySelector('h3');
        if (titleElement) {
          titleElement.textContent = newImgAlt;
        }
        
        // Update counter
        const counterElement = modal.querySelector('.image-counter');
        if (counterElement) {
          counterElement.textContent = `${newIndex + 1} / ${allImages.length}`;
        }
        
        // Update navigation buttons
        updateNavigationButtons(newIndex);
        
        // Fade in new image
        modalImage.style.opacity = '1';
        modalImage.style.transform = 'scale(1)';
      }, 150);
    }
  }
  
  // Function to update navigation buttons visibility
  function updateNavigationButtons(currentIndex) {
    const modal = document.querySelector('.image-modal');
    if (!modal) return;
    
    const allImages = Array.from(document.querySelectorAll('.gallery-img'));
    const modalBody = modal.querySelector('.modal-body');
    let prevBtn = modal.querySelector('.nav-prev');
    let nextBtn = modal.querySelector('.nav-next');
    
    // Remove existing buttons
    if (prevBtn) prevBtn.remove();
    if (nextBtn) nextBtn.remove();
    
    // Create previous button if needed
    if (currentIndex > 0) {
      prevBtn = document.createElement('button');
      prevBtn.className = 'nav-arrow nav-prev';
      prevBtn.innerHTML = '&#10094;';
      prevBtn.style.cssText = `
        position: absolute;
        left: 1.5rem;
        top: 50%;
        transform: translateY(-50%);
        background: rgba(0, 0, 0, 0.4);
        border: none;
        color: white;
        width: 48px;
        height: 48px;
        border-radius: 12px;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 1.2rem;
        font-weight: 300;
        cursor: pointer;
        transition: all 0.3s ease;
        backdrop-filter: blur(10px);
        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
        z-index: 10;
      `;
      
      prevBtn.addEventListener('click', function(e) {
        e.stopPropagation();
        navigateToImage(modal.currentIndex - 1);
      });
      
      prevBtn.addEventListener('mouseenter', function() {
        this.style.transform = 'translateY(-50%) scale(1.05)';
        this.style.background = 'rgba(0, 0, 0, 0.6)';
        this.style.boxShadow = '0 6px 20px rgba(0, 0, 0, 0.3)';
      });
      
      prevBtn.addEventListener('mouseleave', function() {
        this.style.transform = 'translateY(-50%) scale(1)';
        this.style.background = 'rgba(0, 0, 0, 0.4)';
        this.style.boxShadow = '0 4px 15px rgba(0, 0, 0, 0.2)';
      });
      
      modalBody.appendChild(prevBtn);
    }
    
    // Create next button if needed
    if (currentIndex < allImages.length - 1) {
      nextBtn = document.createElement('button');
      nextBtn.className = 'nav-arrow nav-next';
      nextBtn.innerHTML = '&#10095;';
      nextBtn.style.cssText = `
        position: absolute;
        right: 1.5rem;
        top: 50%;
        transform: translateY(-50%);
        background: rgba(0, 0, 0, 0.4);
        border: none;
        color: white;
        width: 48px;
        height: 48px;
        border-radius: 12px;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 1.2rem;
        font-weight: 300;
        cursor: pointer;
        transition: all 0.3s ease;
        backdrop-filter: blur(10px);
        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
        z-index: 10;
      `;
      
      nextBtn.addEventListener('click', function(e) {
        e.stopPropagation();
        navigateToImage(modal.currentIndex + 1);
      });
      
      nextBtn.addEventListener('mouseenter', function() {
        this.style.transform = 'translateY(-50%) scale(1.05)';
        this.style.background = 'rgba(0, 0, 0, 0.6)';
        this.style.boxShadow = '0 6px 20px rgba(0, 0, 0, 0.3)';
      });
      
      nextBtn.addEventListener('mouseleave', function() {
        this.style.transform = 'translateY(-50%) scale(1)';
        this.style.background = 'rgba(0, 0, 0, 0.4)';
        this.style.boxShadow = '0 4px 15px rgba(0, 0, 0, 0.2)';
      });
      
      modalBody.appendChild(nextBtn);
    }
  }
  
  function closeImageModal() {
    const modal = document.querySelector('.image-modal');
    if (modal) {
      modal.remove();
      document.body.style.overflow = 'auto';
    }
  }
  
  // Initialize when page loads
  document.addEventListener('DOMContentLoaded', function() {
    initGalleryModal();
  });
</script>

<style>
  .full-gallery-page {
    width: 100%;
    min-height: calc(100vh - 80px); /* Account for navigation height */
    padding-bottom: 2rem; /* Ensure bottom spacing */
  }
  
  .gallery-hero {
    height: 60vh;
    background: linear-gradient(135deg, #f8f8f8 0%, #e8e8e8 100%);
    display: flex;
    align-items: center;
    justify-content: center;
    text-align: center;
    position: relative;
    overflow: hidden;
  }
  
  .gallery-hero::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: url('https://images.unsplash.com/photo-1500534314209-a25ddb2bd429?auto=format&fit=crop&w=1600&q=80') center/cover;
    opacity: 0.3;
    z-index: 1;
  }
  
  .gallery-hero-content {
    position: relative;
    z-index: 2;
    color: #222;
    max-width: 800px;
    padding: 0 2rem;
  }
  
  .gallery-title {
    font-family: 'Playfair Display', serif;
    font-size: 4rem;
    font-weight: 400;
    color: #222;
    margin-bottom: 1.5rem;
    letter-spacing: 2px;
    text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.1);
  }
  
  .gallery-subtitle {
    font-family: 'Montserrat', Arial, sans-serif;
    font-size: 1.3rem;
    color: #bfa16b;
    letter-spacing: 3px;
    margin-bottom: 2rem;
    text-transform: uppercase;
    font-weight: 500;
  }
  
  .gallery-description {
    font-family: 'Montserrat', Arial, sans-serif;
    font-size: 1.2rem;
    color: #555;
    line-height: 1.6;
    max-width: 600px;
    margin: 0 auto;
  }
  
  .gallery-grid-section {
    background: #f8f8f8;
    padding: 4rem 2rem 6rem 2rem; /* Increased bottom padding */
  }
  
  .gallery-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: 2rem;
    max-width: 1200px;
    margin: 0 auto;
  }
  
  .gallery-item {
    position: relative;
    overflow: hidden;
    border-radius: 12px;
    box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
    transition: transform 0.3s ease, box-shadow 0.3s ease;
    cursor: pointer;
    background: white;
  }
  
  .gallery-item:hover {
    transform: translateY(-8px);
    box-shadow: 0 16px 48px rgba(0, 0, 0, 0.15);
  }
  
  .gallery-img {
    width: 100%;
    height: 300px;
    object-fit: cover;
    display: block;
    transition: transform 0.3s ease;
  }
  
  .gallery-item:hover .gallery-img {
    transform: scale(1.05);
  }
  
  /* Responsive */
  @media (max-width: 768px) {
    .full-gallery-page {
      min-height: calc(100vh - 60px); /* Smaller navigation on mobile */
      padding-bottom: 3rem; /* More bottom padding on mobile */
    }
    
    .gallery-hero {
      height: 50vh; /* Reduce hero height on mobile */
    }
    
    .gallery-title { 
      font-size: 3rem; 
      margin-bottom: 1rem; /* Reduce margin on mobile */
    }
    
    .gallery-subtitle {
      font-size: 1.1rem;
      margin-bottom: 1.5rem;
    }
    
    .gallery-description {
      font-size: 1rem;
    }
    
    .gallery-grid-section {
      padding: 3rem 1.5rem 5rem 1.5rem; /* Adjust mobile padding */
    }
    
    .gallery-grid { 
      grid-template-columns: repeat(auto-fit, minmax(250px, 1fr)); 
      gap: 1.5rem; /* Reduce gap on mobile */
    }
    
    .gallery-img { height: 250px; }
  }
  
  @media (max-width: 480px) {
    .full-gallery-page {
      padding-bottom: 4rem; /* Even more bottom padding on small mobile */
    }
    
    .gallery-hero {
      height: 45vh; /* Further reduce hero height */
    }
    
    .gallery-title { 
      font-size: 2.5rem; 
      letter-spacing: 1px; /* Reduce letter spacing on small screens */
    }
    
    .gallery-subtitle {
      font-size: 1rem;
      letter-spacing: 2px;
    }
    
    .gallery-grid-section {
      padding: 2rem 1rem 4rem 1rem; /* Minimal padding on small mobile */
    }
    
    .gallery-grid { 
      grid-template-columns: 1fr; 
      gap: 1rem; /* Minimal gap on small mobile */
    }
    
    .gallery-img { height: 200px; }
  }
  
  /* Modal responsive styles with glassmorphism design */
  @media (max-width: 768px) {
    .nav-arrow {
      width: 44px !important;
      height: 44px !important;
      font-size: 1.1rem !important;
    }
    
    .nav-prev {
      left: 1rem !important;
    }
    
    .nav-next {
      right: 1rem !important;
    }
    
    .image-counter {
      bottom: 1rem !important;
      right: 1rem !important;
      font-size: 0.8rem !important;
      padding: 0.6rem 1rem !important;
    }
    
    .modal-header h3 {
      font-size: 1rem !important;
    }
    
    .close-btn {
      width: 30px !important;
      height: 30px !important;
      font-size: 1.1rem !important;
    }
  }
  
  @media (max-width: 480px) {
    .nav-arrow {
      width: 40px !important;
      height: 40px !important;
      font-size: 1rem !important;
    }
    
    .nav-prev {
      left: 0.5rem !important;
    }
    
    .nav-next {
      right: 0.5rem !important;
    }
    
    .modal-content {
      max-width: 98vw !important;
      max-height: 98vh !important;
    }
    
    .modal-body {
      padding: 0.5rem !important;
    }
    
    .modal-image {
      max-height: 70vh !important;
    }
    
    .image-counter {
      bottom: 0.5rem !important;
      right: 0.5rem !important;
      font-size: 0.75rem !important;
      padding: 0.5rem 0.8rem !important;
    }
  }
</style>
